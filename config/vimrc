set bg=dark         " dark bg when console background is black
set tabstop=4       " (ts) width (in spaces) that a <tab> is displayed as
set softtabstop=4   " (sts) makes spaces feel like tabs (like deleting)
set shiftwidth=4    " (sw) width (in spaces) used in each step of autoindent (aswell as << and >>)
set autoindent      " (ai) turn on auto-indenting (great for programers)
set expandtab       " (et) expand tabs to spaces (use :retab to redo entire file)
set statusline+=\ %P    "percent through file
syntax on
nnoremap v <c-v> " remap `v` to `Ctrl-v`

" This is to rename-window when file is opened by vim
let g:remoteSession = ($STY == "")
if !exists('$TMUX')
    if g:remoteSession
        autocmd BufEnter * let &titlestring = expand("%:t")
        set title
    endif
else
    autocmd BufEnter * let &titlestring = expand("%:t")
    set title
endif

" This is to use vim modules using Vundle
if !empty(glob("~/.vim/bundle/Vundle.vim"))
    nnoremap <C-space> <tab>
    set nocompatible
    filetype off                  " required
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
    Plugin 'VundleVim/Vundle.vim'
    Plugin 'davidhalter/jedi-vim'
    Plugin 'valloric/youcompleteme'
    Plugin 'morhetz/gruvbox'
    Plugin 'rodjek/vim-puppet'
    Plugin 'Raimondi/delimitMate'
    Plugin 'tomtom/tcomment_vim'
    Plugin 'terryma/vim-multiple-cursors'
    Plugin 'python-mode/python-mode'
    call vundle#end()
    filetype plugin indent on
    "Remove preview when autocomplete vim-jedi
    set completeopt-=preview
    " Change Colorscheme and background color to black
    autocmd FileType yaml,vim,python,sh,conf,puppet colorscheme gruvbox
    autocmd FileType yaml,vim,python,sh,conf,puppet highlight Normal ctermbg=None
    " Comment multiple lines using #
    let g:tcomment_mapleader_comment_anyway = '#'
    " Uncomment lines using g#
    let g:tcomment_mapleader_uncomment_anyway = 'g#'

    " python-mode
    " Use python version 2
    let g:pymode_python = 'python'
    " python-mode disable all warning
    let g:pymode_options_colorcolumn = 0
    " Pylint ignore all warning
    let g:pymode_lint_ignore = ["W","E302", "E303"]
    " Pylint verify if error when editing (test for now)
    let g:pymode_lint_on_fly =  1
    " Documentation
    let g:pymode_doc_bind = 'K'
    " Disable python-code to run codes
    let g:pymode_run = 0

    " map 'q' to close buffer readonly
    nnoremap <expr> q (!&modifiable ? ':bd!<CR>' : 'q')

	" Skeleton for a new python file
	if has("autocmd")
	  augroup templates
	    autocmd BufNewFile *.py 0r ~/.vim/templates/skeleton.py
	  augroup END
	endif
endif

" Python Files
autocmd FileType python setlocal nu
autocmd FileType python inoremap <S-tab> <tab>
" Execute script with no parameters
autocmd FileType python nnoremap <buffer> <F5> :exec '!clear && python' shellescape(@%, 1)<cr>
" Execute script with parameters
autocmd FileType python nnoremap <buffer> <F6> :exec '!clear && python %' 
autocmd FileType python set pumheight=15

" YAML Files
autocmd FileType yaml setlocal ai et ts=2 sts=2 sw=2    "Only when file is an yaml format

" This must be here due python plugin colors
if &term =~ '256color'
    " disable background color erase
    set t_ut=
endif

let g:ycm_python_binary_path = 'python'

