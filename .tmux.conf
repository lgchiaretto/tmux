# vim: set ft=tmux:

##################
#                #
#     simple     #
#   .tmux.conf   #
#    chiaretto   #
#                #
##################

######################## Good practice ##########################
#   bind --> bind-key                                                                                   #
#       -n flag: enable bind key without prefix                                 #
#   unbind --> unbind-key                                                                               #
#   set  --> set-option                                                                                 #
#       -g flag: global                                                                                 #
#   setw --> set-window-option                                                                  #
#   run  --> run-shell                                                                                  #
#################################################################

######### Choose your own colours ##########
# for i in {0..255} ; do                   #
#    printf "\x1b[38;5;${i}mcolour${i}\n"; #
# done                                     #
############################################

# Changing C-b to C-s
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# Create new window
bind -n C-t new-window -c "#{pane_current_path}"
unbind t
bind t new-window -c "#{pane_current_path}"


# Switch Windows (Shift + Arrow keys)
bind -n S-right next-window
bind -n S-left previous-window

# Split panes using | and -
bind -n C-\\ split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Switch panes (Ctrl + Arrow keys)
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# Change window position (Ctrl + Shift + Arrow keys)
bind -n C-S-Left swap-window -t -1\; select-window -t -1
bind -n C-S-Right swap-window -t +1\; select-window -t +1

# Resizing panel (Alt + Shift + Arrow keys)
bind -n M-S-Left resize-pane -L
bind -n M-S-Right resize-pane -R
bind -n M-S-Up resize-pane -U
bind -n M-S-Down resize-pane -D

# Changing pane positions (Alt + Arrow keys)
bind -n M-Up swap-pane -U
bind -n M-Down swap-pane -D

# Create new session
unbind n
bind n command-prompt "new-session -s '%%' -c '#{pane_current_path}'"

# Rename Session
unbind '.'
bind . command-prompt "rename-session '%%'"

# Rename Window
unbind ','
bind , command-prompt "rename-window '%%'"

# Change format choose-tree 
bind s choose-session -F '#{window_name}'
bind w choose-tree -w -F '#{window_name}'

# Sync panes on/off
bind a setw synchronize-panes

# Move window to session
# bind m command-prompt -p "Move window to session? " "move-window -t %%:"

unbind p
bind p choose-window 'join-pane -s "%%"'

#unbind '"'
#unbind %

# Enable mouse selection
set -g mouse on

# Selection with mouse should copy to clipboard right away, in addition to the default action.
unbind -n -T copy-mode-vi MouseDragEnd1Pane
# bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - > /dev/null"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\;

# Paste
unbind MouseDown2Pane
bind -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
bind -T root C-v run -b "tmux paste-buffer"

# Choose which buffer to paste from
bind b if 'test -n "$(tmux list-buffer)"' \
  "choose-buffer -Z -F \"#{buffer_sample}\" -O time" \
  "display-message 'Buffer is empty'"

# Reverse search on terminal
# bind -n C-f copy-mode \; send-keys ?
bind / copy-mode \; send-keys ?

bind -T copy-mode-vi C-f send -X page-down
bind -T copy-mode-vi C-b send -X page-up

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Open ~/.tmux.conf in vim
unbind e
bind e new-window "vim ~/.tmux.conf"

# Bind k to kill-window
bind k confirm kill-window

# Export one pane to a new window
# bind j break-pane -t :

# Export one pane to a selected window
#bind m choose-window 'join-pane -s "%%"'
bind m break-pane

bind K confirm-before -p 'Kill session (y/N)?' '            \
    run-shell "                                             \
        if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then   \
            tmux switch-client -ln;                         \
        fi;                                                 \
        tmux kill-session -t \"#S\";                        \
        tmux refresh-client -S;                             \
    "'

# kill all tmux
bind D confirm-before -p 'Confirm kill all sessions? (y/N)?' '                                  \
    run-shell "                                                                                 \
        for s in \$(tmux list-sessions -F \"\##{session_name}\"); do                            \
            for w in \$(tmux list-windows -t \$s -F \"##{window_index}\"); do                   \
                for p in \$(tmux list-panes -t \"\$s:\$w\" -F \"##{pane_index}\"); do           \
                    t=\"\$s:\$w.\$p\";                                                          \
                    bin=\$(tmux display-message -t \$t -p -F \"##{pane_current_command}\");     \
                    if [ \"\$bin\" = \"vim\" ]; then                                            \
                        tmux send-keys -t \$t Escape;                                           \
                        tmux send-keys -t \$t :qa;                                              \
                        tmux send-keys -t \$t Enter;                                            \
                        sleep 0.1; tmux refresh-client -S;                                      \
                        bin=\$(tmux display-message -t \$t -p -F \"##{pane_current_command}\"); \
                        if [ \"\$bin\" = \"vim\" ]; then                                        \
                            tmux send-keys -t \$t Escape;                                       \
                            tmux select-pane -t \$t;                                            \
                            tmux select-window -t \"\$s:\$w\";                                  \
                            tmux display-message \"Exit vim and re-run the command...\";        \
                            exit 0;                                                             \
                        fi;                                                                     \
                    fi;                                                                         \
                done;                                                                           \
            done;                                                                               \
        done;                                                                                   \
        tmux kill-server;                                                                       \
    "'

# Exit when press ESC (changed from 500ms do 0)
set -sg escape-time 0

# Change tmux term from screen to xterm-256color
# set -g default-terminal "screen-256color"


# Do not exit when close session and another exists
set -g detach-on-destroy off

# When a smaller terminal connects to a tmux client, it shrinks to fit it.
setw -g aggressive-resize on

# Auto rename
setw -g automatic-rename on
set -g automatic-rename-format "#{?#{==:#{pane_current_command},bash},#{pane_current_path},#{pane_current_command}(#{pane_title})}"

# Renumber windows
set -g renumber-windows on

# # ** Pane Colors (different colors)
# setw  -g pane-active-border-style     fg=colour223,bg=default
# setw  -g pane-border-style            fg=colour223,bg=default
# setw  -g window-active-style          'bg=#000000' # bg color of active pane
# setw  -g window-style                 'bg=black' # bg color of inactive pane(s)

# ** Pane Colors
setw  -g pane-active-border-style     fg=colour223,bg=#000000
setw  -g pane-border-style            fg=colour223,bg=#000000
setw  -g window-active-style          'bg=#000000' # bg color of active pane
setw  -g window-style                 'bg=#000000' # bg color of inactive pane(s)

# message infos
set -g message-style fg=colour223

# writting commands inactive
set -g message-command-style fg=colour223

# pane number display
# set -g display-panes-active-colour colour250
set -g display-panes-colour colour237

# clock
setw -g clock-mode-colour colour223

# Window mode as VI
setw -g mode-keys vi
set -g status-keys vi
setw -g mode-keys vi

# Quiet mode
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
set -g monitor-activity off

# The statusbar 
# default statusbar colors
set -g status-style fg=colour237

# default window title colors
set -g window-status-style fg=colour237

set -g window-status-activity-style fg=colour248

# active window title colors
set -g window-status-current-style fg=colour237

#set -g status-interval 1
set -g status-position bottom
set -g status-left-length 120
set -g status-right-length 60
# Personaliza a barra de status para incluir o "+" como bot√£o
set -g status-right "#[fg=green]#[nobold,nounderscore,noitalics]<Split Window>#[default]"
set -g status-left "#[fg=colour223][#[fg=colour142]#S:#[fg=green]#(/bin/bash $HOME/.tmux/ocp-cluster.tmux)#[fg=colour223]] #[fg=colour223,  nobold, noitalics, nounderscore]| "

#
# Color when select with mouse
set -wg mode-style fg=colour214

# Boost history
set -g history-limit 10000

# Install plugins 
# Run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'
# before install plugins
#set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'kolach/tmux-temp'

# scroll with mouse on 'less'
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

# tempo
##set -g @forecast-format '%t'

#mouse
set -g @scroll-in-moused-over-pane "off"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
run '~/.tmux/plugins/tmux-battery/battery.tmux'

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM "truecolor"

bind-key -n MouseDown1StatusLeft new-window
bind-key -n MouseDown1StatusRight split-window -v -c "#{pane_current_path}"


#set -g window-status-current-format '#[fg=colour214,  nobold, noitalics, nounderscore]#W#[fg=colour223,  nobold, noitalics, nounderscore] |'
#set -g window-status-format '#[fg=colour223,  nobold, noitalics, nounderscore]#W#[fg=colour223,  nobold, noitalics, nounderscore] |'


set -g window-status-current-format '#[fg=colour214,  nobold, noitalics, nounderscore]#W#{?window_end_flag,#[range=user|new][+]#[norange],}#[fg=colour223,  nobold, noitalics, nounderscore] |'
set -g window-status-format '#[fg=colour223,  nobold, noitalics, nounderscore]#W#{?window_end_flag,#[range=user|new][+]#[norange],}#[norange#[fg=colour223,  nobold, noitalics, nounderscore] |'

bind -Troot MouseDown1Status if -F '#{==:#{mouse_status_range},window}' {
    select-window
} {
    if -F '#{==:#{mouse_status_range},new}' {
        new-window
    }
}
